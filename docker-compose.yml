---
version: '2'

services:
  database:
    tty: true
    environment:
      # Set default credentials
      # - ALLOW_EMPTY_PASSWORD=yes
      - MYSQL_ROOT_USER=root
      - MYSQL_ROOT_PASSWORD=mysql_pass
      # Specify the names of the databases to create
      #  (corresponding to the app bot-names)
      - INIT_DB_NAMES=odiometro,amorometro
    build:
      context: .
      dockerfile: ./Dockerfile-database
    # volumes:
      # MySql image supports docker-entrypoint-initdb.d/ to load .sql or .sh,
      # - ./init-from-DB_NAMES.sh:/docker-entrypoint-initdb.d/init-from-DB_NAMES.sh
      # Cache apt-get (for debug purposes)
      # - ./var/apt/cache:/var/cache/apt/archives
      # Backup databases to host machine
      #  (remember: init script runs just when /var/lib/mysql is empty)
      # - ./var/mysql:/var/lib/mysql

  odiometro:
    tty: true  # Enables debugging capabilities when attached to this container.
    environment:
      - PORT=3000
      - NODE_ENV=development
      - APP_BOT_NAME=odiometro
      # - APP_URL=http://localhost:3000
      # - APP_DATABASE_URL=mysql://root:mysql_pass@database/odiometro
      - APP_DATABASE_HOST=database
      - APP_DATABASE_NAME=odiometro
      - APP_DATABASE_USER=root
      - APP_DATABASE_PASSWORD=mysql_pass
    working_dir: /home/node/app
    build: .
    depends_on:
      - database
    ports:
      - 3000:3000
    volumes:
      - ./:/app

  amorometro:
    tty: true  # Enables debugging capabilities when attached to this container.
    environment:
      - PORT=3001
      - NODE_ENV=development
      - APP_BOT_NAME=amorometro
      # - APP_URL=http://localhost:3001
      # - APP_DATABASE_URL=mysql://root:mysql_pass@database/amorometro
      - APP_DATABASE_HOST=database
      - APP_DATABASE_NAME=amorometro
      - APP_DATABASE_USER=root
      - APP_DATABASE_PASSWORD=mysql_pass
    working_dir: /home/node/app
    build: .
    depends_on:
      - database
    ports:
      - 3001:3000
    volumes:
      - ./:/app
